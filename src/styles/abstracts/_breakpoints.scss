@use 'sass:map';

/// Get breakpoint from breakpoint map with error handling
/// @param {Map} $breakpoints - Complete breakpoint map
/// @param {String} $name - Breakpoint name (e.g., 'lg')
/// @return {String} - Breakpoint value
/// @error If the size does not exist in the map
/// @example get-font-size($font-sizes, 'base') // returns 1rem
@function get-breakpoint($breakpoints, $name) {
    @if not map.has-key($breakpoints, $name) {
        @error "Breakpoint '#{$name}' not found. Available breakpoints: #{map.keys($breakpoints)}";
    }
    @return map.get($breakpoints, $name);
}

/// Shortcut function to get breakpoint value
/// @param {String} $name - Breakpoint name (e.g., 'lg')
/// @return {String} - Breakpoint value
/// @example breakpoint('md') // returns 768px
/// @see get-breakpoint()
@function breakpoint($name) {
  @return get-breakpoint($breakpoints, $name);
}

$breakpoints: (
  'xs': 0,
  'sm': 640px,
  'md': 768px,
  'lg': 1024px,
  'xl': 1280px,
  'xxl': 1536px
);

@mixin media-up($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map.get($breakpoints, $breakpoint);
    @if $breakpoint-value != 0 {
      @media (min-width: $breakpoint-value) {
        @content;
      }
    } @else {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}.";
  }
}

@mixin media-down($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map.get($breakpoints, $breakpoint);
    @media (max-width: ($breakpoint-value - 0.02px)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoint: #{$breakpoint}.";
  }
}

@mixin media-between($lower, $upper) {
  @if map.has-key($breakpoints, $lower) and map.has-key($breakpoints, $upper) {
    $lower-breakpoint: map.get($breakpoints, $lower);
    $upper-breakpoint: map.get($breakpoints, $upper);
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 0.02px)) {
      @content;
    }
  } @else {
    @warn "Invalid breakpoints.";
  }
}