---
import { navigation, isNavLink } from "../../data/site/navigation";
const currentPath = Astro.url.pathname;
---

<nav class="nav" aria-label="Primary navigation">
  <button class="nav__mobile-toggle" aria-expanded="false" aria-controls="nav-mobile" aria-label="Toggle navigation">
    <span class="nav__mobile-toggle-icon"></span>
    <span class="sr-only">Toggle navigation</span>
  </button>

  <div class="nav__menu nav__mobile" id="nav_menu">
    <div class="nav__mobile-close">
      <i class="fa-solid fa-xmark"></i>
    </div>
    {
      Object.values(navigation).map((item) =>
        item.global ? (
          <div class="nav__item">
            {
              isNavLink(item) ? (
                <a
                  href={item.url}
                  class={`nav__link ${isNavLink(item) && item.children ? "nav__desktop-link" : ""}`}
                  aria-current={currentPath === item.url ? "page" : undefined}
                >
                  {item.label}
                </a>
              ) : (
                <span 
                  class="nav__link"
                  {...item.children ? { "aria-expanded": "false", "aria-haspopup": "true" } : {}}
                >
                  {item.label} {item.children ? <i class="fa-solid fa-chevron-right"></i> : null}
                </span>
              )
            }
            { 
              isNavLink(item) && item.children ? (
                <span 
                  class="nav__link nav__mobile-link" 
                  aria-current={currentPath === item.url ? "page" : undefined}
                  aria-expanded="false" 
                  aria-haspopup="true"
                >
                  {item.label} {item.children ? <i class="fa-solid fa-chevron-right"></i> : null}
                </span>
              ) : null 
            }
            {
              item.children ? (
                <div class="nav__dropdown">
                  <div class="nav__mobile-close">
                    <i class="fa-solid fa-xmark"></i>
                  </div>
                  <div class="nav__mobile-back">
                    <i class="fa-solid fa-chevron-left"></i>
                  </div>
                  <div class="nav__dropdown-item nav__dropdown-header">
                    { 
                      isNavLink(item) ? (
                        <a
                          href={item.url}
                          class="nav__dropdown-link"
                          aria-current={currentPath === item.url ? "page" : undefined}
                        >
                          {item.label}
                        </a>
                      ) : (
                        <span 
                          class="nav__dropdown-link"
                        >
                          {item.label}
                        </span>
                      ) 
                    }
                  </div>
                  {
                    Object.values(item.children).map((subItem) => 
                      subItem.global ? (
                        <div class="nav__dropdown-item">
                          {
                            isNavLink(subItem) ? (
                              <a
                                href={subItem.url}
                                class={`nav__dropdown-link ${isNavLink(subItem) && subItem.children ? "nav__desktop-link" : ""}`}
                                aria-current={
                                  currentPath === subItem.url ? "page" : undefined
                                }
                                {...subItem.children ? { "aria-expanded": "false", "aria-haspopup": "true" } : {}}
                              >
                                {subItem.label}
                              </a>
                            ) : (
                              <span 
                                class="nav__dropdown-link"
                                {...subItem.children ? { "aria-expanded": "false", "aria-haspopup": "true" } : {}}
                              >
                                {subItem.label}
                              </span>
                            )
                          }
                          { 
                            isNavLink(subItem) && subItem.children ? (
                              <span 
                                class="nav__dropdown-link nav__mobile-link" 
                                aria-current={currentPath === subItem.url ? "page" : undefined}
                                aria-expanded="false" 
                                aria-haspopup="true"
                              >
                                {subItem.label} <i class="fa-solid fa-chevron-right"></i>
                              </span>
                            ) : null 
                          }
                          {
                            subItem.children ? (
                              <div class="nav__dropdown">
                                <div class="nav__mobile-close">
                                  <i class="fa-solid fa-xmark"></i>
                                </div>
                                <div class="nav__mobile-back">
                                  <i class="fa-solid fa-chevron-left"></i>
                                </div>
                                <div class="nav__dropdown-item nav__dropdown-header">
                                  { isNavLink(subItem) ? (
                                    <a
                                      href={subItem.url}
                                      class="nav__dropdown-link"
                                      aria-current={currentPath === subItem.url ? "page" : undefined}
                                    >
                                      {subItem.label}
                                    </a>
                                  ) : (
                                    <span 
                                      class="nav__dropdown-link"
                                    >
                                      {subItem.label}
                                    </span>
                                  ) }
                                </div>
                                {
                                  Object.values(subItem.children).map((subSubItem) =>
                                    subSubItem.global ? (
                                      <div class="nav__dropdown-item">
                                        {
                                          isNavLink(subSubItem) ? (
                                            <a
                                              href={subSubItem.url}
                                              class="nav__dropdown-link"
                                              aria-current={
                                                currentPath === subSubItem.url
                                                  ? "page"
                                                  : undefined
                                              }
                                            >
                                              {subSubItem.label}
                                            </a>
                                          ) : (
                                            <span 
                                              class="nav__dropdown-link"
                                            >
                                              {subSubItem.label}
                                            </span>
                                          )
                                        }
                                      </div>
                                    ) : null,
                                  )
                                }
                              </div>
                            ) : null
                          }
                        </div>
                      ) : null,
                    )
                  }
                </div>
              ) : null
            }
          </div>
        ) : null,
      )
    }
  </div>
  <div class="nav__overlay"></div>
</nav>

<style lang="scss">
  @use "sass:map";
  @use "../../styles/abstracts" as *;

  $nav-links-min-width: var(--space-20);

  $link-color: var(--color-white);
  $link-hover-color: var(--color-primary);
  $link-font-family: var(--font-family-heading);

  $dropdown-bg-color: var(--color-white);
  $dropdown-link-color: var(--color-primary);
  $dropdown-link-hover-bg-color: var(--color-neutral-200);
  $dropdown-link-border: 1px solid var(--color-neutral-200);
  $dropdown-link-font-family: $link-font-family;
  $dropdown-link-y-padding: var(--space-4);
  $dropdown-link-x-padding: var(--space-5);

  $sub-dropdown-link-color: $dropdown-link-color;
  $sub-dropdown-bg-color: $dropdown-bg-color;
  $sub-dropdown-link-hover-bg-color: $dropdown-link-hover-bg-color;
  $sub-dropdown-link-border: $dropdown-link-border;

  $mobile-toggle-color: var(--color-white);
  $mobile-menu-width: 70vw;

  .nav {
    &__menu {
      display: flex;
      list-style: none;
      margin: 0;
      padding: 0;

      @include media-down($mobile-breakpoint) {
        display: none;
      }
    }

    &__item {
      position: relative;
      margin: 0 var(--space-2);
      font-family: $link-font-family;
    }

    &__link {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: var(--space-3) var(--space-2);
      text-decoration: none;
      color: $link-color;
      font-weight: var(--font-weight-medium);
      font-size: var(--font-size-base);
      transition: var(--transition-base);
      position: relative;
      white-space: nowrap;
    }

    @include media-up($mobile-breakpoint) {
      &__link {
        min-width: $nav-links-min-width;

        &[aria-current="page"] {
          color: var(--color-primary-700);
          font-weight: var(--font-weight-medium);
        }

        &::after {
          content: "";
          position: absolute;
          bottom: -5px;
          left: 0;
          //transform: translateX(-50%);
          width: 0;
          height: 2px;
          background-color: $link-hover-color;
          transition: var(--transition-base);
        }

        &:hover {
          color: $link-hover-color;

          &::after {
            width: 100%;
          }
        }
      }

      &__item &__dropdown {
        list-style: none;
        min-width: 200px;
        padding: 0;
        transition: var(--transition-base);
      }

      &__item:hover > &__dropdown {
        opacity: 1;
        visibility: visible;
      }

      &__item > &__dropdown {
        position: absolute;
        top: 100%;
        left: 0;
        margin-top: 15px;
        background: $dropdown-bg-color;
        box-shadow: var(--shadow-lg);
        opacity: 0;
        visibility: hidden;
        z-index: var(--z-index-navbar);

        & .nav__dropdown-item {
          margin: 0;
          border-bottom: 1px solid var(--color-neutral-200);
          font-family: $dropdown-link-font-family;

          &:last-child {
            border-bottom: none;
          }

          & > .nav__dropdown {
            border-top: $sub-dropdown-link-border;

            .nav__dropdown-link {
              padding-left: calc($dropdown-link-x-padding * 2);
            }
          }
        }

        & .nav__dropdown-link {
          display: block;
          padding: $dropdown-link-y-padding $dropdown-link-x-padding;
          text-decoration: none;
          color: $dropdown-link-color;
          font-weight: var(--font-weight-medium);
          font-size: var(--font-size-base);
          transition: var(--transition-base);

          &:hover {
            background-color: $dropdown-link-hover-bg-color;
          }

          &[aria-current="page"] {
            background-color: var(--color-primary);
            color: var(--color-neutral-50);
          }
        }
      }

      &__mobile-toggle,
      &__mobile-close,
      &__mobile-back,
      &__overlay,
      &__mobile-link,
      &__dropdown-header,
      &__dropdown-arrow {
        display: none!important;
      }
    }

    
    @include media-down($mobile-breakpoint) {
      &__desktop-link {
        display: none!important;
      }

      &__mobile-close {
        position: absolute;
        top: var(--space-5);
        right: var(--space-5);
        color: $link-color;
        display: flex;
        justify-content: center;
        align-items: center;

        i {
          font-size: var(--font-size-xl);
        }
      }

      &__mobile-back {
        position: absolute;
        top: var(--space-5);
        left: var(--space-5);
        color: $link-color;
        display: flex;
        justify-content: center;
        align-items: center;

        i {
          font-size: var(--font-size-lg);
        }
      }

      &__overlay {
        display: block;
        position: absolute;
        z-index: calc(var(--z-index-navbar) - 1);
        top: 0;
        left: 100%;  
        width: 100vw;
        height: 100vh;
        background: rgba(0, 0, 0, 0.2);
        transition: var(--transition-base);
      }

      &__mobile-toggle {
        display: flex;
        background: none;
        border: none;
        padding: 0;
        cursor: pointer;
        align-items: center;
        justify-content: center;
        width: 2.5rem;
        height: 2.5rem;

        &-icon {
          position: relative;
          width: 1.5rem;
          height: 2px;
          background-color: var(--color-mobile-toggle);
          transition: var(--transition-fast);

          &::before,
          &::after {
            content: "";
            position: absolute;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: var(--color-mobile-toggle);
            transition: var(--transition-fast);
          }

          &::before {
            top: -6px;
          }

          &::after {
            bottom: -6px;
          }
        }

        &[aria-expanded="true"] &-icon {
          background-color: transparent;

          &::before {
            top: 0;
            transform: rotate(45deg);
          }

          &::after {
            bottom: 0;
            transform: rotate(-45deg);
          }
        }
      }

      &__mobile-toggle[aria-expanded="true"] ~ &__overlay {
        left: 0;
      }

      &__mobile {
        position: absolute;
        top: 0;
        left: 100%;
        width: $mobile-menu-width;
        height: 100vh;
        display: flex;
        flex-direction: column;
        gap: 0;
        padding: var(--space-20) 0;
        background-color: var(--color-header-bg);
        box-shadow: var(--shadow-lg);
        z-index: var(--z-index-navbar);
        overscroll-behavior: contain;
        transition: var(--transition-base);
      }

      &__mobile-toggle[aria-expanded="true"] ~ &__mobile {
        left: calc(100% - $mobile-menu-width);
      }

      &__item,
      &__dropdown-item {
        margin: 0;
        position: static;
      }

      &__link,
      &__dropdown-link {
        position: static;
        color: $link-color;
        padding: var(--space-3) var(--space-5);
        font-weight: var(--font-weight-base);
        font-size: var(--font-size-xl);
        justify-content: flex-start;

        i {
          margin-left: auto;
          font-size: var(--font-size-base);
        }
      }

      &__link + &__dropdown,
      &__dropdown-link + &__dropdown {
        display: block;
        left: 100%;
      }

      &__link[aria-expanded="true"] + &__dropdown,
      &__dropdown-link[aria-expanded="true"] + &__dropdown {
        left: 0;
      }

      &__dropdown {
        position: absolute;
        top: 0;
        width: $mobile-menu-width;
        height: 100vh;
        z-index: 1;
        background-color: var(--color-header-bg);
        padding: var(--space-20) 0;
        transition: var(--transition-base);

        &-link {
          display: flex;
          align-items: center;
          text-decoration: none;
          transition: var(--transition-base);
          white-space: nowrap;
        }
      }

      &__dropdown-item:not(.nav__dropdown-header) > .nav__dropdown-link {
        font-size: var(--font-size-base);
      }
    }
  }
</style>

<script>
  function closeMobileMenu() {
    const mobileToggle = document.querySelector('.nav__mobile-toggle');
    const mobileDropdownLinks = document.querySelectorAll('nav span[aria-haspopup="true"]');
    if (mobileToggle && mobileToggle.getAttribute("aria-expanded") === "true") {
      mobileToggle.setAttribute("aria-expanded", "false");
      document.body.classList.remove('no-scroll');

      mobileDropdownLinks.forEach(link => {
        link.setAttribute("aria-expanded", "false");
      });
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const mobileToggle = document.querySelector('.nav__mobile-toggle');
    const mobileCloseButtons = document.querySelectorAll('.nav__mobile-close');
    const mobileBackButtons = document.querySelectorAll('.nav__mobile-back');
    const mobileDropdownLinks = document.querySelectorAll('nav span[aria-haspopup="true"]');
    const nav = document.querySelector('#nav_menu');

    // Close mobile menu when clicking outside
    document.addEventListener("click", (e: MouseEvent) => {
      if (
        e.target instanceof HTMLElement &&
        !e.target.closest("#nav_menu")
      ) {
        closeMobileMenu();
      }
    });

    mobileCloseButtons.forEach(button => {
      button.addEventListener("click", (e: MouseEvent) => {
        e.stopPropagation();
        closeMobileMenu();
      });
    });

    mobileBackButtons.forEach(button => {
      button.addEventListener("click", (e: MouseEvent) => {
        button.parentNode?.parentNode?.querySelectorAll('span[aria-expanded="true"]').forEach(link => {
          link.setAttribute("aria-expanded", "false");
        });
        e.stopPropagation();
      });
    });

    mobileDropdownLinks.forEach(link => {
      link.addEventListener("click", (e: MouseEvent) => {
        const expanded = link.getAttribute("aria-expanded") === "true";
        link.setAttribute("aria-expanded", expanded ? "false" : "true");
        e.stopPropagation();
      });
    });

    // Toggle mobile menu
    if (mobileToggle) {
      mobileToggle.addEventListener('click', (event) => {
        if (mobileToggle.getAttribute('aria-expanded') === 'true') {
          mobileToggle.setAttribute('aria-expanded', "false");
          document.body.classList.remove('no-scroll');
        } else {
          mobileToggle.setAttribute('aria-expanded', "true");
          document.body.classList.add('no-scroll');
          event?.stopPropagation();
        }
      });
    }
  });
</script>
